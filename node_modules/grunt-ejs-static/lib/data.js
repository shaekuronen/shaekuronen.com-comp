
module.exports = exports = {

  data_validator: function(ejs_static) {

    // get data specified in ejs_static options
    if (ejs_static.options.path_to_data) {

      var data = ejs_static.grunt.file.readJSON(ejs_static.options.path_to_data);

      // parse the data
      ejs_static.parse_data_file(data, ejs_static);

      ejs_static.grunt.log.debug('Data successfully imported');
      
    } else {

      ejs_static.grunt.fail.warn('The path_to_data option is required, please specify in Gruntfile');
      return false;

    }
    // end get data specified in ejs_static options

  },

  // iterate through items in data file
  // http://stackoverflow.com/questions/7440001/iterate-over-object-keys-in-node-js
  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys
  parse_data_file: function(data_object, ejs_static) {

    Object.keys(data_object).forEach(function(key) {

      console.log('this happened');

      ejs_static.grunt.log.debug('this also happened');

      ejs_static.path_to_layout_validator(key, data_object, ejs_static);

    });

  },
  // end iterate through items in data file

  // prepare data for rendering
  // this combines global data, page data from pages declaration json file, and any additional data from different json files
  prepare_data: function(key, data_object, path_to_layout, ejs_static) {

    // get the data for this file 
    var this_page_data = data_object[key];

    // add any additional data specified in pages declaration json file
    if (this_page_data.path_to_data) {

      ejs_static.grunt.log.debug(this_page_data.path_to_data);

      ejs_static.data_type_router(key, this_page_data, this_page_data.path_to_data, ejs_static);

      // add the data to the data_object
      // this_page_data[key] = additional_page_data;

    }

    // set the base dir for includes
    // tj uses filename to set base dir for includes in ejs.js
    // which make the include relative to the file
    // see resolveInclude() in visionmedia/ejs/lib/ejs.js
    this_page_data.filename = path_to_layout;
    ejs_static.grunt.log.debug('THIS DATA FILENAME IS ' + this_page_data.filename);

    return this_page_data;      

  },
  // end prepare data for rendering

  // route data based on data type (string, object, or array)
  data_type_router: function(key, data_object, data_item, ejs_static) {

    ejs_static.grunt.log.debug('data_type_router(): key is ' + key);

    // if path_to_data is a string 
    if (typeof data_item === 'string') {

      ejs_static.grunt.log.debug('the data item is a string');

      // add the data to the data_object
      data_object[key] = ejs_static.grunt.file.readJSON(data_item);

    // if path_to_data is an object, get the data for only the specified value
    // http://stackoverflow.com/questions/8834126/how-to-efficiently-check-if-variable-is-array-or-object-in-nodejs-v8
    } else if (Object.getPrototypeOf(data_item) === Object.prototype) {

      ejs_static.grunt.log.debug('data_type_router(): data item is an object instead of required string or array');

    // if path_to_data is an array, get the specified data for each item in the array
    } else if (Array.isArray(data_item)) {

      ejs_static.grunt.log.debug('the data item is an array');

      data_item.forEach(function(path_to_data) {

        // if path_to_data is a string
        if (typeof path_to_data === 'string') {

          // get the filename to use as key when data added to data_object
          var the_filename = ejs_static.path.basename(path_to_data, '.json');

          ejs_static.grunt.log.debug('the filename is ' + the_filename);

          // add the data to the data_object
          data_object[the_filename] = ejs_static.grunt.file.readJSON(path_to_data);

        // if path_to_data is an object
        } else if (Object.getPrototypeOf(path_to_data) === Object.prototype) {

          Object.keys(path_to_data).forEach(function(the_key) {

            // get the filename to use as key when data added to data_object
            var the_filename = ejs_static.path.basename(the_key, '.json');

            var this_data = ejs_static.grunt.file.readJSON(the_key);

            var this_value = path_to_data[the_key];

            // add the data to the data_object
            data_object[the_filename] = this_data[this_value];

            ejs_static.grunt.log.debug('Object in an Array is ' + JSON.stringify(data_object, null, 2));

          });

        } else {
          ejs_static.grunt.fail.warn('prepare_data(): data type error');
        }

      });

    } else {
      ejs_static.grunt.fail.warn('prepare_data(): data type error');
    }

  }
  // end route data based on if data is a string, object, or array

};

