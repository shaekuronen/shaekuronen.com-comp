/*
 * grunt-ejs-static
 * https://github.com/shaekuronen/grunt-ejs-static
 *
 * Copyright (c) 2013 Shae Kuronen
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function(grunt) {

  var ejs = require('ejs');
  var path = require('path');

  // Please see the Grunt documentation for more information regarding task
  // creation: http://gruntjs.com/creating-tasks

  grunt.registerMultiTask('ejs_static', 'Render EJS templates as static HTML.', function() {

    // Merge task-specific and/or target-specific options with these defaults.
    var options = this.options({
      punctuation: '.',
      separator: ', '
    });

    var data = process_data(options.data);

    grunt.log.writeln(JSON.stringify(options.data));

    // combine data in options.data into a single data object
    function process_data(unprocessed_data) {

      var the_data = {};

      for (var key in unprocessed_data) {

        var this_data = grunt.file.readJSON(unprocessed_data[key]);

        the_data[key] = this_data;

      }

      return the_data;

      // var the_data = [];

      // for (var key in unprocessed_data) {

      //   grunt.log.writeln(key);

      //   var this_data = grunt.file.readJSON(unprocessed_data[key]);

      //   var data_object = {};

      //   data_object[key] = this_data;

      //   the_data.push(data_object);

      // }

      // return the_data;

    }


    grunt.log.writeln('');

    grunt.log.writeln('The processed data is ' + JSON.stringify(data) );

    grunt.log.writeln('');

    grunt.log.writeln(data.global.google_analytics);



    // get the parent directory of layout manager 
    function get_parent_directory(path_to_file) {

        var tokens = [];

        tokens = path_to_file.split('/');

        // remove the index.html file from array
        var the_file = tokens.splice(-1, 2);

        var the_parent_directory = tokens.pop();

        return the_parent_directory;

    }
    // end get the parent directory of layout manager

    // get the path to the rendered template
    function get_path_to_rendered_template(path_to_file, path_to_layout, destination) {

      // remove src (options.src) from beginning of path
      var path_to_rendered_template = path_to_file.replace(path_to_layout, "");

      // add destination (options.dest) to beginning of path
      path_to_rendered_template = destination + path_to_rendered_template;

      return path_to_rendered_template;     
      
    }
    // end get the path to the rendered template

  });

};
